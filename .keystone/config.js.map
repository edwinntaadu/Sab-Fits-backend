{
  "version": 3,
  "sources": ["../keystone.ts", "../auth.ts", "../lib/mail.ts", "../schemas/User.ts", "../schemas/Product.ts", "../schemas/ProductImage.ts", "../schemas/CartItem.ts"],
  "sourcesContent": ["import 'dotenv/config';\nimport { config } from '@keystone-6/core';\nimport { withAuth, session } from './auth';\nimport { User } from './schemas/User';\nimport { Product } from './schemas/Product';\nimport { ProductImage } from './schemas/ProductImage';\nimport { CartItem } from './schemas/CartItem';\n\nif (!process.env.DATABASE_URL) {\n  throw new Error('DATABASE_URL environment variable is not set');\n}\n\nconst databaseUrl = process.env.DATABASE_URL;\n\nexport default withAuth(\n  config({\n    db: {\n      provider: 'postgresql',\n      url: databaseUrl,\n      enableLogging: true,\n      idField: { kind: 'uuid' },\n    },\n    server: {\n      cors: {\n        origin: [process.env.FRONTEND_URL],\n        credentials: true,\n      },\n    },\n    lists: {\n      // Schema items go here\n      User,\n      Product,\n      ProductImage,\n      CartItem,\n    },\n    session,\n    ui: {\n      isAccessAllowed: (context) => !!context.session?.data,\n    },\n  })\n);\n\n", "import 'dotenv/config';\nimport { randomBytes } from 'crypto';\nimport { createAuth } from '@keystone-6/auth';\nimport { statelessSessions } from '@keystone-6/core/session';\nimport { sendPasswordResetEmail } from './lib/mail';\n\n\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\n  sessionSecret = randomBytes(32).toString('hex');\n}\n\nif (!sessionSecret) {\n  throw new Error('SESSION_SECRET environment variable is not set');\n}\n\nconst { withAuth } = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n  sessionData: 'id name email createdAt',\n  secretField: 'password',\n  initFirstItem: {\n    fields: ['name', 'email', 'password'],\n  },\n  passwordResetLink: {\n    async sendToken(args) {\n      // send the email\n      await sendPasswordResetEmail(args.token, args.identity);\n    }\n  }\n});\n\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret,\n});\n\nexport { withAuth, session };\n", "import { createTransport, getTestMessageUrl } from 'nodemailer';\n\nconst transport = createTransport({\n  host: process.env.MAIL_HOST,\n  port: parseInt(process.env.MAIL_PORT, 10), // Convert port to number\n  auth: {\n    user: process.env.MAIL_USER,\n    pass: process.env.MAIL_PASS,\n  },\n});\n\nfunction makeANiceEmail(text: string): string {\n  return `\n    <div style=\"\n      border: 1px solid black;\n      padding: 20px;\n      font-family: sans-serif;\n      line-height: 2;\n      font-size: 20px;\n    \">\n      <h2>Hello There!</h2>\n      <p>${text}</p>\n      <p>\uD83D\uDE18, Sab</p>\n    </div>\n  `;\n}\n\nexport async function sendPasswordResetEmail(resetToken: string, to: string) {\n  // email the user a token\n  const info = await transport.sendMail({\n    to,\n    from: 'test@example.com',\n    subject: 'Your password reset token',\n    html: makeANiceEmail(`Your Password Reset Token is here!\n      \n      <a href=\"${process.env.FRONTEND_URL}/reset?token=${resetToken}\">Click Here to reset</a>\n    `),\n  });\n\n  if (process.env.MAIL_USER && process.env.MAIL_USER.includes('ethereal.email')) {\n    console.log(`\uD83D\uDC8C Message Sent! Preview it at ${getTestMessageUrl(info)}`);\n  }\n}\n", "import { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport { password, relationship, text, timestamp } from \"@keystone-6/core/fields\";\n\nexport const User = list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      email: text({\n        validation: { isRequired: true },\n        isIndexed: 'unique',\n      }),\n      password: password({ validation: { isRequired: true } }),\n      createdAt: timestamp({\n        defaultValue: { kind: 'now' },\n      }),\n      cart: relationship({ref: 'CartItem.user', many: true,\n        ui: {\n          createView: {fieldMode: 'hidden'},\n          itemView: {fieldMode: 'read'},\n        }\n      })\n    },\n})", "import { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport { integer, relationship, select, text } from \"@keystone-6/core/fields\";\n\nexport const Product = list({\n    access: allowAll,\n    fields: {\n      name: text({validation: {isRequired: true }}),\n      description: text({\n        ui: {\n          displayMode: 'textarea',\n        },\n      }),\n      photo: relationship({\n        ref: 'ProductImage.product',\n        ui: {\n          displayMode: 'cards',\n          cardFields: ['image', 'altText'],\n          inlineCreate: { fields: ['image', 'altText'] },\n          inlineEdit: { fields: ['image', 'altText'] },\n        },\n      }),\n      status: select({\n        options: [\n          {label: 'Draft', value: 'DRAFT' },\n          {label: 'Available', value: 'AVAILABLE' },\n          {label: 'Unavailable', value: 'UNAVAILABLE' },\n        ],\n        defaultValue: 'DRAFT',\n        ui: {\n          displayMode: 'segmented-control',\n          createView: {fieldMode: 'hidden'},\n        },\n      }),\n      price: integer(),\n      // TODO: photo\n    },\n})", "import { cloudinaryImage } from \"@keystone-6/cloudinary\";\nimport { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport { relationship, text } from \"@keystone-6/core/fields\";\n\nif (!process.env.CLOUDINARY_CLOUD_NAME || !process.env.CLOUDINARY_KEY || !process.env.CLOUDINARY_SECRET) {\n    throw new Error('Cloudinary environment variables are not set');\n  }\n\nconst cloudinaryConfig = {\n    cloudName: process.env.CLOUDINARY_CLOUD_NAME,\n    apiKey: process.env.CLOUDINARY_KEY,\n    apiSecret: process.env.CLOUDINARY_SECRET,\n    folder: 'sabfits',\n  };\n\nexport const ProductImage = list({\n    access: allowAll,\n    fields: {\n      image: cloudinaryImage({\n        cloudinary: cloudinaryConfig,\n        label: 'Source',\n      }),\n      altText: text(),\n      product: relationship({ref: 'Product.photo'}),\n    },\n    ui: {\n      listView: {\n        initialColumns: ['image', 'altText', 'product'],\n      },\n    },\n  })", "import { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport { integer, relationship, select, text } from \"@keystone-6/core/fields\";\n\nexport const CartItem = list({\n    access: allowAll,\n    ui: {\n        listView: {\n            initialColumns: ['product', 'quantity', 'user']\n        }\n    },\n    fields: {\n        // TODO: custom label here\n        quantity: integer({\n            defaultValue: 1,\n            validation: {isRequired: true},\n        }),\n        product: relationship({ref: 'Product'}),\n        user: relationship({ref: 'User.cart'}),\n    },\n});"],
  "mappings": "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",
  "names": ["import_config", "import_core", "text", "import_core", "import_access", "import_fields", "import_core", "import_access", "import_fields", "import_core", "import_access", "import_fields"]
}
